var j={};async function S(b={}){const i=window.nodejs.fs,h=window.nodejs.fsExtra,P=i.promises,p=window.nodejs.path,u=window.nodejs.glob;let n={prefix:null};Object.assign(n,b);const v=e=>e[0]==="~"?p.join(j.HOME||j.USERPROFILE,e.slice(1)):e;function s(e){return e.replace(/\\/g,"/")}function m(e){return e=v(e),n.prefix&&(e=p.resolve(n.prefix,e)),e=s(e),e=p.resolve(e),e}if(n.prefix){if(n.prefix=v(n.prefix),n.prefix=s(n.prefix),!i.existsSync(n.prefix))console.warn("Make directory."),i.mkdirSync(n.prefix,{recursive:!0});else if(!i.lstatSync(n.prefix).isDirectory())throw console.error(`${n.prefix} is not directory`),new Error(`${n.prefix} is not directory`)}else n.prefix="";return{driver:"local",async resolve(e){return e=s(e),e=v(e),e},async list(e,r){return new Promise((o,c)=>{e=s(e),e=m(e);async function l(a){let x=[],d=[];for(let f=0;f<a.length;f++){let t=a[f];try{let y="";t.name.split(".").length>1&&(y=t.name.split(".").pop());let w={id:p.resolve(n.prefix,e,t.name),protocol:"local",prefix:n.prefix,basename:p.basename(t.name),relative_path:p.resolve(e,t.name),absolute_path:p.resolve(n.prefix,e,t.name),ext:y,is_file:t.isFile(),is_directory:t.isDirectory(),date:null,date_promise:P.stat(p.resolve(n.prefix,e,t.name))};w.relative_path=s(w.relative_path),w.absolute_path=s(w.absolute_path),x.push(w)}catch(y){console.warn(y)}}for(let f=0;f<x.length;f++){let t=x[f];try{t.date=(await t.date_promise).mtime.getTime(),delete t.date_promise,d.push(t)}catch(y){console.warn(y)}}return d}r?.recursive?u(p.join(e,"**/*.*"),{},function(a,x){if(a)c(a);else{let d=x.length,f=[];for(let t of x)i.stat(t,(y,w)=>{if(y){if(console.error(y),d--,d==0){let _=l(f);o(_)}}else if(w.name=t,f.push(w),d--,d==0){let _=l(f);o(_)}})}}):i.readdir(e,{withFileTypes:!0},async(a,x)=>{if(a)c(a);else{let d=l(x);o(d)}})})},async exists(e){return new Promise((r,o)=>{e=s(e),e=m(e),i.access(e,i.constants.F_OK,c=>{r(c==null)})})},async copy(e,r){return new Promise((o,c)=>{e=s(e),r=s(r),e=m(e),r=m(r),h.copy(e,r,l=>{o(l==null)})})},async move(e,r){return new Promise((o,c)=>{e=s(e),r=s(r),e=m(e),r=m(r),i.rename(e,r,function(l){o(l==null)})})},async put(e,r){return new Promise((o,c)=>{e=s(e),e=m(e);let l=p.dirname(e);i.existsSync(e)||i.mkdirSync(l,{recursive:!0}),r instanceof ArrayBuffer&&(r=Buffer.from(r)),i.writeFile(e,r,"binary",function(a){a?c(a):o()})})},async get(e){return new Promise((r,o)=>{e=s(e),e=m(e),i.readFile(e,function(c,l){c?o(c):r(l)})})},async mkdir(e){return new Promise((r,o)=>{e=s(e),e=m(e),i.mkdir(e,{recursive:!0},function(c){r(c==null)})})},async remove(e){e=s(e),e=m(e),i.rmSync(e,{recursive:!0,force:!0})}}}export{S as create_disk_io};
