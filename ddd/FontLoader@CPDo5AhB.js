import{ac as T,ad as w,aP as F}from"./ddd@DwDq534T.js";class q extends T{constructor(e){super(e)}load(e,t,i,a){const n=new w(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,function(r){let c;try{r instanceof ArrayBuffer&&(r=new TextDecoder().decode(r)),c=JSON.parse(r)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),c=JSON.parse(r.substring(65,r.length-2))}t&&t(font)},i,a)}parse(e){return new f(e)}}class f{constructor(e){this.isFont=!0,this.type="Font",this.data=e}generateShapes(e,t=100){const i=[],a=x(e,t,this.data);for(let n=0,r=a.length;n<r;n++)i.push(...a[n].toShapes());return i}}function x(d,e,t){const i=Array.from(d),a=e/t.resolution,n=(t.boundingBox.yMax-t.boundingBox.yMin+t.underlineThickness)*a,r=[];let c=0,h=0;for(let p=0;p<i.length;p++){const u=i[p];if(u===`
`)c=0,h-=n;else{const l=k(u,a,c,h,t);c+=l.offsetX,r.push(l.path)}}return r}function k(d,e,t,i,a){const n=a.glyphs[d]||a.glyphs["?"];if(!n){console.error('THREE.Font: character "'+d+'" does not exists in font family '+a.familyName+".");return}const r=new F;let c,h,p,u,l,y,g,b;if(n.o){const o=n._cachedOutline||(n._cachedOutline=n.o.split(" "));for(let s=0,m=o.length;s<m;)switch(o[s++]){case"m":c=o[s++]*e+t,h=o[s++]*e+i,r.moveTo(c,h);break;case"l":c=o[s++]*e+t,h=o[s++]*e+i,r.lineTo(c,h);break;case"q":p=o[s++]*e+t,u=o[s++]*e+i,l=o[s++]*e+t,y=o[s++]*e+i,r.quadraticCurveTo(l,y,p,u);break;case"b":p=o[s++]*e+t,u=o[s++]*e+i,l=o[s++]*e+t,y=o[s++]*e+i,g=o[s++]*e+t,b=o[s++]*e+i,r.bezierCurveTo(l,y,g,b,p,u);break}}return{offsetX:n.ha*e,path:r}}export{f as Font,q as FontLoader};
