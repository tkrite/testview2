import{V as p,a4 as u,as as d,B as x,ao as f,ap as b}from"./ddd@DwDq534T.js";const r=new p,i=new p,m=new u;class j extends d{constructor(a,e=1,o=16711680){const s=new x,l=a.geometry.attributes.normal.count,t=new f(l*2*3,3);s.setAttribute("position",t),super(s,new b({color:o,toneMapped:!1})),this.object=a,this.size=e,this.type="VertexNormalsHelper",this.matrixAutoUpdate=!1,this.update()}update(){this.object.updateMatrixWorld(!0),m.getNormalMatrix(this.object.matrixWorld);const a=this.object.matrixWorld,e=this.geometry.attributes.position,o=this.object.geometry;if(o){const s=o.attributes.position,l=o.attributes.normal;let t=0;for(let n=0,c=s.count;n<c;n++)r.fromBufferAttribute(s,n).applyMatrix4(a),i.fromBufferAttribute(l,n),i.applyMatrix3(m).normalize().multiplyScalar(this.size).add(r),e.setXYZ(t,r.x,r.y,r.z),t=t+1,e.setXYZ(t,i.x,i.y,i.z),t=t+1}e.needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}export{j as VertexNormalsHelper};
