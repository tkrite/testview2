import{ac as b,X as m,F as L,ad as N,V as w,ae as E,p as T,af as g}from"./ddd@DwDq534T.js";class M extends b{constructor(t){super(t),this.type=m}setType(t){if(t!==m&&t!==L)throw new Error("LUTCubeLoader: Unsupported type");return this.type=t,this}load(t,c,u,r){const s=new N(this.manager);s.setPath(this.path),s.setResponseType("text"),s.load(t,h=>{try{c(this.parse(h))}catch(e){r?r(e):console.error(e),this.manager.itemError(t)}},u,r)}parse(t){const c=/TITLE +"([^"]*)"/,u=/LUT_3D_SIZE +(\d+)/,r=/DOMAIN_MIN +([\d.]+) +([\d.]+) +([\d.]+)/,s=/DOMAIN_MAX +([\d.]+) +([\d.]+) +([\d.]+)/,h=/^([\d.e+-]+) +([\d.e+-]+) +([\d.e+-]+) *$/gm;let e=c.exec(t);const y=e!==null?e[1]:null;if(e=u.exec(t),e===null)throw new Error("LUTCubeLoader: Missing LUT_3D_SIZE information");const n=Number(e[1]),x=n**3*4,i=this.type===m?new Uint8Array(x):new Float32Array(x),o=new w(0,0,0),d=new w(1,1,1);if(e=r.exec(t),e!==null&&o.set(Number(e[1]),Number(e[2]),Number(e[3])),e=s.exec(t),e!==null&&d.set(Number(e[1]),Number(e[2]),Number(e[3])),o.x>d.x||o.y>d.y||o.z>d.z)throw new Error("LUTCubeLoader: Invalid input domain");const l=this.type===m?255:1;let p=0;for(;(e=h.exec(t))!==null;)i[p++]=Number(e[1])*l,i[p++]=Number(e[2])*l,i[p++]=Number(e[3])*l,i[p++]=l;const a=new E;return a.image.data=i,a.image.width=n,a.image.height=n,a.image.depth=n,a.type=this.type,a.magFilter=T,a.minFilter=T,a.wrapS=g,a.wrapT=g,a.wrapR=g,a.generateMipmaps=!1,a.needsUpdate=!0,{title:y,size:n,domainMin:o,domainMax:d,texture3D:a}}}export{M as LUTCubeLoader};
