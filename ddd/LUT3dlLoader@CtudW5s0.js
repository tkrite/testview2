import{ac as E,X as g,F as D,ad as N,ae as R,R as z,p as M,af as T}from"./ddd@DwDq534T.js";class S extends E{constructor(r){super(r),this.type=g}setType(r){if(r!==g&&r!==D)throw new Error("LUT3dlLoader: Unsupported type");return this.type=r,this}load(r,m,w,s){const o=new N(this.manager);o.setPath(this.path),o.setResponseType("text"),o.load(r,y=>{try{m(this.parse(y))}catch(t){s?s(t):console.error(t),this.manager.itemError(r)}},w,s)}parse(r){const m=/^[\d ]+$/m,w=/^([\d.e+-]+) +([\d.e+-]+) +([\d.e+-]+) *$/gm;let s=m.exec(r);if(s===null)throw new Error("LUT3dlLoader: Missing grid information");const o=s[0].trim().split(/\s+/g).map(Number),y=o[1]-o[0],t=o.length,F=t**2;for(let e=1,l=o.length;e<l;++e)if(y!==o[e]-o[e-1])throw new Error("LUT3dlLoader: Inconsistent grid size");const n=new Float32Array(t**3*4);let u=0,c=0;for(;(s=w.exec(r))!==null;){const e=Number(s[1]),l=Number(s[2]),d=Number(s[3]);u=Math.max(u,e,l,d);const h=c%t,f=Math.floor(c/t)%t,b=Math.floor(c/F)%t,x=(h*F+f*t+b)*4;n[x+0]=e,n[x+1]=l,n[x+2]=d,++c}const U=Math.ceil(Math.log2(u)),L=Math.pow(2,U),i=this.type===g?new Uint8Array(n.length):n,p=this.type===g?255:1;for(let e=0,l=i.length;e<l;e+=4){const d=e+1,h=e+2,f=e+3;i[e]=n[e]/L*p,i[d]=n[d]/L*p,i[h]=n[h]/L*p,i[f]=p}const a=new R;return a.image.data=i,a.image.width=t,a.image.height=t,a.image.depth=t,a.format=z,a.type=this.type,a.magFilter=M,a.minFilter=M,a.wrapS=T,a.wrapT=T,a.wrapR=T,a.generateMipmaps=!1,a.needsUpdate=!0,{size:t,texture3D:a}}}export{S as LUT3dlLoader};
