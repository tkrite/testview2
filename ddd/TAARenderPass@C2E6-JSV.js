import{W as m,H as p}from"./ddd@DwDq534T.js";import{SSAARenderPass as C}from"./SSAARenderPass@CzwPtIot.js";class A extends C{constructor(t,s,e,a){super(t,s,e,a),this.sampleLevel=0,this.accumulate=!1,this.accumulateIndex=-1}render(t,s,e,a,h,o){if(this.accumulate===!1){super.render(t,s,e,a,h,o),this.accumulateIndex=-1;return}const i=R[5];this.sampleRenderTarget===void 0&&(this.sampleRenderTarget=new m(e.width,e.height,{type:p}),this.sampleRenderTarget.texture.name="TAARenderPass.sample"),this.holdRenderTarget===void 0&&(this.holdRenderTarget=new m(e.width,e.height,{type:p}),this.holdRenderTarget.texture.name="TAARenderPass.hold"),this.accumulateIndex===-1&&(super.render(t,this.holdRenderTarget,e,a,h,o),this.accumulateIndex=0);const d=t.autoClear;t.autoClear=!1,t.getClearColor(this._oldClearColor);const r=t.getClearAlpha(),c=1/i.length;if(this.accumulateIndex>=0&&this.accumulateIndex<i.length){this.copyUniforms.opacity.value=c,this.copyUniforms.tDiffuse.value=s.texture;const g=Math.pow(2,this.sampleLevel);for(let n=0;n<g;n++){const f=this.accumulateIndex,u=i[f];if(this.camera.setViewOffset&&this.camera.setViewOffset(e.width,e.height,u[0]*.0625,u[1]*.0625,e.width,e.height),t.setRenderTarget(s),t.setClearColor(this.clearColor,this.clearAlpha),t.clear(),t.render(this.scene,this.camera),this.outline_effect&&this.outline_effect.render(this.scene,this.camera),t.setRenderTarget(this.sampleRenderTarget),this.accumulateIndex===0&&(t.setClearColor(0,0),t.clear()),this.fsQuad.render(t),this.accumulateIndex++,this.accumulateIndex>=i.length)break}this.camera.clearViewOffset&&this.camera.clearViewOffset()}t.setClearColor(this.clearColor,this.clearAlpha);const l=this.accumulateIndex*c;l>0&&(this.copyUniforms.opacity.value=1,this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture,t.setRenderTarget(s),t.clear(),this.fsQuad.render(t)),l<1&&(this.copyUniforms.opacity.value=1-l,this.copyUniforms.tDiffuse.value=this.holdRenderTarget.texture,t.setRenderTarget(s),this.fsQuad.render(t)),t.autoClear=d,t.setClearColor(this._oldClearColor,r)}dispose(){super.dispose(),this.holdRenderTarget&&this.holdRenderTarget.dispose()}}const R=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]];export{A as TAARenderPass};
