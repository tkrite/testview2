import{b as se,ba as te,V as v,bB as B,bC as ne,aG as ie,a0 as H,R as re,D as oe,av as L,bk as D,br as ae,j as Z,f as Y,bm as ce,N as ue,bo as le,bq as fe,p as he,bp as pe,aa as de,af as xe,Y as ge,aW as Te,an as Me,Q as me}from"./ddd@DwDq534T.js";import{d as z}from"./TextureUtils@YzsTNqKi.js";const K={POSITION:["byte","byte normalized","unsigned byte","unsigned byte normalized","short","short normalized","unsigned short","unsigned short normalized"],NORMAL:["byte normalized","short normalized"],TANGENT:["byte normalized","short normalized"],TEXCOORD:["byte","byte normalized","unsigned byte","short","short normalized","unsigned short"]};class Q{constructor(){this.pluginCallbacks=[],this.register(function(e){return new Se(e)}),this.register(function(e){return new _e(e)}),this.register(function(e){return new Oe(e)}),this.register(function(e){return new ve(e)}),this.register(function(e){return new De(e)}),this.register(function(e){return new Ge(e)}),this.register(function(e){return new Ce(e)}),this.register(function(e){return new Ue(e)}),this.register(function(e){return new Fe(e)}),this.register(function(e){return new Be(e)}),this.register(function(e){return new ze(e)}),this.register(function(e){return new Pe(e)}),this.register(function(e){return new ke(e)}),this.register(function(e){return new He(e)})}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,s,n,t){const r=new Le,i=[];for(let o=0,a=this.pluginCallbacks.length;o<a;o++)i.push(this.pluginCallbacks[o](r));r.setPlugins(i),r.write(e,s,t).catch(n)}parseAsync(e,s){const n=this;return new Promise(function(t,r){n.parse(e,t,r,s)})}}const T={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,REPEAT:10497},P="KHR_mesh_quantization",R={};R[ue]=T.NEAREST;R[le]=T.NEAREST_MIPMAP_NEAREST;R[fe]=T.NEAREST_MIPMAP_LINEAR;R[he]=T.LINEAR;R[pe]=T.LINEAR_MIPMAP_NEAREST;R[de]=T.LINEAR_MIPMAP_LINEAR;R[xe]=T.CLAMP_TO_EDGE;R[ge]=T.REPEAT;R[Te]=T.MIRRORED_REPEAT;const j={scale:"scale",position:"translation",quaternion:"rotation",morphTargetInfluences:"weights"},ye=new se,q=12,we=1179937895,Ee=2,W=8,Ie=1313821514,Ae=5130562;function F(c,e){return c.length===e.length&&c.every(function(s,n){return s===e[n]})}function Re(c){return new TextEncoder().encode(c).buffer}function be(c){return F(c.elements,[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}function Ne(c,e,s){const n={min:new Array(c.itemSize).fill(Number.POSITIVE_INFINITY),max:new Array(c.itemSize).fill(Number.NEGATIVE_INFINITY)};for(let t=e;t<e+s;t++)for(let r=0;r<c.itemSize;r++){let i;c.itemSize>4?i=c.array[t*c.itemSize+r]:(r===0?i=c.getX(t):r===1?i=c.getY(t):r===2?i=c.getZ(t):r===3&&(i=c.getW(t)),c.normalized===!0&&(i=H.normalize(i,c.array))),n.min[r]=Math.min(n.min[r],i),n.max[r]=Math.max(n.max[r],i)}return n}function $(c){return Math.ceil(c/4)*4}function k(c,e=0){const s=$(c.byteLength);if(s!==c.byteLength){const n=new Uint8Array(s);if(n.set(new Uint8Array(c)),e!==0)for(let t=c.byteLength;t<s;t++)n[t]=e;return n.buffer}return c}function X(){return typeof document>"u"&&typeof OffscreenCanvas<"u"?new OffscreenCanvas(1,1):document.createElement("canvas")}function J(c,e){if(c.toBlob!==void 0)return new Promise(n=>c.toBlob(n,e));let s;return e==="image/jpeg"?s=.92:e==="image/webp"&&(s=.8),c.convertToBlob({type:e,quality:s})}class Le{constructor(){this.plugins=[],this.options={},this.pending=[],this.buffers=[],this.byteOffset=0,this.buffers=[],this.nodeMap=new Map,this.skins=[],this.extensionsUsed={},this.extensionsRequired={},this.uids=new Map,this.uid=0,this.json={asset:{version:"2.0",generator:"THREE.GLTFExporter r"+te}},this.cache={meshes:new Map,attributes:new Map,attributesNormalized:new Map,materials:new Map,textures:new Map,images:new Map}}setPlugins(e){this.plugins=e}async write(e,s,n={}){this.options=Object.assign({binary:!1,trs:!1,onlyVisible:!0,maxTextureSize:1/0,animations:[],includeCustomExtensions:!1},n),this.options.animations.length>0&&(this.options.trs=!0),this.processInput(e),await Promise.all(this.pending);const t=this,r=t.buffers,i=t.json;n=t.options;const o=t.extensionsUsed,a=t.extensionsRequired,l=new Blob(r,{type:"application/octet-stream"}),h=Object.keys(o),u=Object.keys(a);if(h.length>0&&(i.extensionsUsed=h),u.length>0&&(i.extensionsRequired=u),i.buffers&&i.buffers.length>0&&(i.buffers[0].byteLength=l.size),n.binary===!0){const M=new FileReader;M.readAsArrayBuffer(l),M.onloadend=function(){const f=k(M.result),p=new DataView(new ArrayBuffer(W));p.setUint32(0,f.byteLength,!0),p.setUint32(4,Ae,!0);const d=k(Re(JSON.stringify(i)),32),g=new DataView(new ArrayBuffer(W));g.setUint32(0,d.byteLength,!0),g.setUint32(4,Ie,!0);const y=new ArrayBuffer(q),b=new DataView(y);b.setUint32(0,we,!0),b.setUint32(4,Ee,!0);const O=q+g.byteLength+d.byteLength+p.byteLength+f.byteLength;b.setUint32(8,O,!0);const x=new Blob([y,g,d,p,f],{type:"application/octet-stream"}),m=new FileReader;m.readAsArrayBuffer(x),m.onloadend=function(){s(m.result)}}}else if(i.buffers&&i.buffers.length>0){const M=new FileReader;M.readAsDataURL(l),M.onloadend=function(){const f=M.result;i.buffers[0].uri=f,s(i)}}else s(i)}serializeUserData(e,s){if(Object.keys(e.userData).length===0)return;const n=this.options,t=this.extensionsUsed;try{const r=JSON.parse(JSON.stringify(e.userData));if(n.includeCustomExtensions&&r.gltfExtensions){s.extensions===void 0&&(s.extensions={});for(const i in r.gltfExtensions)s.extensions[i]=r.gltfExtensions[i],t[i]=!0;delete r.gltfExtensions}Object.keys(r).length>0&&(s.extras=r)}catch(r){console.warn("THREE.GLTFExporter: userData of '"+e.name+"' won't be serialized because of JSON.stringify error - "+r.message)}}getUID(e,s=!1){if(this.uids.has(e)===!1){const t=new Map;t.set(!0,this.uid++),t.set(!1,this.uid++),this.uids.set(e,t)}return this.uids.get(e).get(s)}isNormalizedNormalAttribute(e){if(this.cache.attributesNormalized.has(e))return!1;const n=new v;for(let t=0,r=e.count;t<r;t++)if(Math.abs(n.fromBufferAttribute(e,t).length()-1)>5e-4)return!1;return!0}createNormalizedNormalAttribute(e){const s=this.cache;if(s.attributesNormalized.has(e))return s.attributesNormalized.get(e);const n=e.clone(),t=new v;for(let r=0,i=n.count;r<i;r++)t.fromBufferAttribute(n,r),t.x===0&&t.y===0&&t.z===0?t.setX(1):t.normalize(),n.setXYZ(r,t.x,t.y,t.z);return s.attributesNormalized.set(e,n),n}applyTextureTransform(e,s){let n=!1;const t={};(s.offset.x!==0||s.offset.y!==0)&&(t.offset=s.offset.toArray(),n=!0),s.rotation!==0&&(t.rotation=s.rotation,n=!0),(s.repeat.x!==1||s.repeat.y!==1)&&(t.scale=s.repeat.toArray(),n=!0),n&&(e.extensions=e.extensions||{},e.extensions.KHR_texture_transform=t,this.extensionsUsed.KHR_texture_transform=!0)}buildMetalRoughTexture(e,s){if(e===s)return e;function n(f){return f.colorSpace===Me?function(d){return d<.04045?d*.0773993808:Math.pow(d*.9478672986+.0521327014,2.4)}:function(d){return d}}console.warn("THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures."),e instanceof B&&(e=z(e)),s instanceof B&&(s=z(s));const t=e?e.image:null,r=s?s.image:null,i=Math.max(t?t.width:0,r?r.width:0),o=Math.max(t?t.height:0,r?r.height:0),a=X();a.width=i,a.height=o;const l=a.getContext("2d");l.fillStyle="#00ffff",l.fillRect(0,0,i,o);const h=l.getImageData(0,0,i,o);if(t){l.drawImage(t,0,0,i,o);const f=n(e),p=l.getImageData(0,0,i,o).data;for(let d=2;d<p.length;d+=4)h.data[d]=f(p[d]/256)*256}if(r){l.drawImage(r,0,0,i,o);const f=n(s),p=l.getImageData(0,0,i,o).data;for(let d=1;d<p.length;d+=4)h.data[d]=f(p[d]/256)*256}l.putImageData(h,0,0);const M=(e||s).clone();return M.source=new ne(a),M.colorSpace=ie,M.channel=(e||s).channel,e&&s&&e.channel!==s.channel&&console.warn("THREE.GLTFExporter: UV channels for metalnessMap and roughnessMap textures must match."),M}processBuffer(e){const s=this.json,n=this.buffers;return s.buffers||(s.buffers=[{byteLength:0}]),n.push(e),0}processBufferView(e,s,n,t,r){const i=this.json;i.bufferViews||(i.bufferViews=[]);let o;switch(s){case T.BYTE:case T.UNSIGNED_BYTE:o=1;break;case T.SHORT:case T.UNSIGNED_SHORT:o=2;break;default:o=4}let a=e.itemSize*o;r===T.ARRAY_BUFFER&&(a=Math.ceil(a/4)*4);const l=$(t*a),h=new DataView(new ArrayBuffer(l));let u=0;for(let p=n;p<n+t;p++){for(let d=0;d<e.itemSize;d++){let g;e.itemSize>4?g=e.array[p*e.itemSize+d]:(d===0?g=e.getX(p):d===1?g=e.getY(p):d===2?g=e.getZ(p):d===3&&(g=e.getW(p)),e.normalized===!0&&(g=H.normalize(g,e.array))),s===T.FLOAT?h.setFloat32(u,g,!0):s===T.INT?h.setInt32(u,g,!0):s===T.UNSIGNED_INT?h.setUint32(u,g,!0):s===T.SHORT?h.setInt16(u,g,!0):s===T.UNSIGNED_SHORT?h.setUint16(u,g,!0):s===T.BYTE?h.setInt8(u,g):s===T.UNSIGNED_BYTE&&h.setUint8(u,g),u+=o}u%a!==0&&(u+=a-u%a)}const M={buffer:this.processBuffer(h.buffer),byteOffset:this.byteOffset,byteLength:l};return r!==void 0&&(M.target=r),r===T.ARRAY_BUFFER&&(M.byteStride=a),this.byteOffset+=l,i.bufferViews.push(M),{id:i.bufferViews.length-1,byteLength:0}}processBufferViewImage(e){const s=this,n=s.json;return n.bufferViews||(n.bufferViews=[]),new Promise(function(t){const r=new FileReader;r.readAsArrayBuffer(e),r.onloadend=function(){const i=k(r.result),o={buffer:s.processBuffer(i),byteOffset:s.byteOffset,byteLength:i.byteLength};s.byteOffset+=i.byteLength,t(n.bufferViews.push(o)-1)}})}processAccessor(e,s,n,t){const r=this.json,i={1:"SCALAR",2:"VEC2",3:"VEC3",4:"VEC4",9:"MAT3",16:"MAT4"};let o;if(e.array.constructor===Float32Array)o=T.FLOAT;else if(e.array.constructor===Int32Array)o=T.INT;else if(e.array.constructor===Uint32Array)o=T.UNSIGNED_INT;else if(e.array.constructor===Int16Array)o=T.SHORT;else if(e.array.constructor===Uint16Array)o=T.UNSIGNED_SHORT;else if(e.array.constructor===Int8Array)o=T.BYTE;else if(e.array.constructor===Uint8Array)o=T.UNSIGNED_BYTE;else throw new Error("THREE.GLTFExporter: Unsupported bufferAttribute component type: "+e.array.constructor.name);if(n===void 0&&(n=0),(t===void 0||t===1/0)&&(t=e.count),t===0)return null;const a=Ne(e,n,t);let l;s!==void 0&&(l=e===s.index?T.ELEMENT_ARRAY_BUFFER:T.ARRAY_BUFFER);const h=this.processBufferView(e,o,n,t,l),u={bufferView:h.id,byteOffset:h.byteOffset,componentType:o,count:t,max:a.max,min:a.min,type:i[e.itemSize]};return e.normalized===!0&&(u.normalized=!0),r.accessors||(r.accessors=[]),r.accessors.push(u)-1}processImage(e,s,n,t="image/png"){if(e!==null){const r=this,i=r.cache,o=r.json,a=r.options,l=r.pending;i.images.has(e)||i.images.set(e,{});const h=i.images.get(e),u=t+":flipY/"+n.toString();if(h[u]!==void 0)return h[u];o.images||(o.images=[]);const M={mimeType:t},f=X();f.width=Math.min(e.width,a.maxTextureSize),f.height=Math.min(e.height,a.maxTextureSize);const p=f.getContext("2d");if(n===!0&&(p.translate(0,f.height),p.scale(1,-1)),e.data!==void 0){s!==re&&console.error("GLTFExporter: Only RGBAFormat is supported.",s),(e.width>a.maxTextureSize||e.height>a.maxTextureSize)&&console.warn("GLTFExporter: Image size is bigger than maxTextureSize",e);const g=new Uint8ClampedArray(e.height*e.width*4);for(let y=0;y<g.length;y+=4)g[y+0]=e.data[y+0],g[y+1]=e.data[y+1],g[y+2]=e.data[y+2],g[y+3]=e.data[y+3];p.putImageData(new ImageData(g,e.width,e.height),0,0)}else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas)p.drawImage(e,0,0,f.width,f.height);else throw new Error("THREE.GLTFExporter: Invalid image type. Use HTMLImageElement, HTMLCanvasElement, ImageBitmap or OffscreenCanvas.");a.binary===!0?l.push(J(f,t).then(g=>r.processBufferViewImage(g)).then(g=>{M.bufferView=g})):f.toDataURL!==void 0?M.uri=f.toDataURL(t):l.push(J(f,t).then(g=>new FileReader().readAsDataURL(g)).then(g=>{M.uri=g}));const d=o.images.push(M)-1;return h[u]=d,d}else throw new Error("THREE.GLTFExporter: No valid image data found. Unable to process texture.")}processSampler(e){const s=this.json;s.samplers||(s.samplers=[]);const n={magFilter:R[e.magFilter],minFilter:R[e.minFilter],wrapS:R[e.wrapS],wrapT:R[e.wrapT]};return s.samplers.push(n)-1}processTexture(e){const n=this.options,t=this.cache,r=this.json;if(t.textures.has(e))return t.textures.get(e);r.textures||(r.textures=[]),e instanceof B&&(e=z(e,n.maxTextureSize));let i=e.userData.mimeType;i==="image/webp"&&(i="image/png");const o={sampler:this.processSampler(e),source:this.processImage(e.image,e.format,e.flipY,i)};e.name&&(o.name=e.name),this._invokeAll(function(l){l.writeTexture&&l.writeTexture(e,o)});const a=r.textures.push(o)-1;return t.textures.set(e,a),a}processMaterial(e){const s=this.cache,n=this.json;if(s.materials.has(e))return s.materials.get(e);if(e.isShaderMaterial)return console.warn("GLTFExporter: THREE.ShaderMaterial not supported."),null;n.materials||(n.materials=[]);const t={pbrMetallicRoughness:{}};e.isMeshStandardMaterial!==!0&&e.isMeshBasicMaterial!==!0&&console.warn("GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.");const r=e.color.toArray().concat([e.opacity]);if(F(r,[1,1,1,1])||(t.pbrMetallicRoughness.baseColorFactor=r),e.isMeshStandardMaterial?(t.pbrMetallicRoughness.metallicFactor=e.metalness,t.pbrMetallicRoughness.roughnessFactor=e.roughness):(t.pbrMetallicRoughness.metallicFactor=.5,t.pbrMetallicRoughness.roughnessFactor=.5),e.metalnessMap||e.roughnessMap){const o=this.buildMetalRoughTexture(e.metalnessMap,e.roughnessMap),a={index:this.processTexture(o),channel:o.channel};this.applyTextureTransform(a,o),t.pbrMetallicRoughness.metallicRoughnessTexture=a}if(e.map){const o={index:this.processTexture(e.map),texCoord:e.map.channel};this.applyTextureTransform(o,e.map),t.pbrMetallicRoughness.baseColorTexture=o}if(e.emissive){const o=e.emissive;if(Math.max(o.r,o.g,o.b)>0&&(t.emissiveFactor=e.emissive.toArray()),e.emissiveMap){const l={index:this.processTexture(e.emissiveMap),texCoord:e.emissiveMap.channel};this.applyTextureTransform(l,e.emissiveMap),t.emissiveTexture=l}}if(e.normalMap){const o={index:this.processTexture(e.normalMap),texCoord:e.normalMap.channel};e.normalScale&&e.normalScale.x!==1&&(o.scale=e.normalScale.x),this.applyTextureTransform(o,e.normalMap),t.normalTexture=o}if(e.aoMap){const o={index:this.processTexture(e.aoMap),texCoord:e.aoMap.channel};e.aoMapIntensity!==1&&(o.strength=e.aoMapIntensity),this.applyTextureTransform(o,e.aoMap),t.occlusionTexture=o}e.transparent?t.alphaMode="BLEND":e.alphaTest>0&&(t.alphaMode="MASK",t.alphaCutoff=e.alphaTest),e.side===oe&&(t.doubleSided=!0),e.name!==""&&(t.name=e.name),this.serializeUserData(e,t),this._invokeAll(function(o){o.writeMaterial&&o.writeMaterial(e,t)});const i=n.materials.push(t)-1;return s.materials.set(e,i),i}processMesh(e){const s=this.cache,n=this.json,t=[e.geometry.uuid];if(Array.isArray(e.material))for(let x=0,m=e.material.length;x<m;x++)t.push(e.material[x].uuid);else t.push(e.material.uuid);const r=t.join(":");if(s.meshes.has(r))return s.meshes.get(r);const i=e.geometry;let o;e.isLineSegments?o=T.LINES:e.isLineLoop?o=T.LINE_LOOP:e.isLine?o=T.LINE_STRIP:e.isPoints?o=T.POINTS:o=e.material.wireframe?T.LINES:T.TRIANGLES;const a={},l={},h=[],u=[],M={uv:"TEXCOORD_0",uv1:"TEXCOORD_1",uv2:"TEXCOORD_2",uv3:"TEXCOORD_3",color:"COLOR_0",skinWeight:"WEIGHTS_0",skinIndex:"JOINTS_0"},f=i.getAttribute("normal");f!==void 0&&!this.isNormalizedNormalAttribute(f)&&(console.warn("THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one."),i.setAttribute("normal",this.createNormalizedNormalAttribute(f)));let p=null;for(let x in i.attributes){if(x.slice(0,5)==="morph")continue;const m=i.attributes[x];if(x=M[x]||x.toUpperCase(),/^(POSITION|NORMAL|TANGENT|TEXCOORD_\d+|COLOR_\d+|JOINTS_\d+|WEIGHTS_\d+)$/.test(x)||(x="_"+x),s.attributes.has(this.getUID(m))){l[x]=s.attributes.get(this.getUID(m));continue}p=null;const E=m.array;x==="JOINTS_0"&&!(E instanceof Uint16Array)&&!(E instanceof Uint8Array)&&(console.warn('GLTFExporter: Attribute "skinIndex" converted to type UNSIGNED_SHORT.'),p=new L(new Uint16Array(E),m.itemSize,m.normalized));const A=this.processAccessor(p||m,i);A!==null&&(x.startsWith("_")||this.detectMeshQuantization(x,m),l[x]=A,s.attributes.set(this.getUID(m),A))}if(f!==void 0&&i.setAttribute("normal",f),Object.keys(l).length===0)return null;if(e.morphTargetInfluences!==void 0&&e.morphTargetInfluences.length>0){const x=[],m=[],w={};if(e.morphTargetDictionary!==void 0)for(const E in e.morphTargetDictionary)w[e.morphTargetDictionary[E]]=E;for(let E=0;E<e.morphTargetInfluences.length;++E){const A={};let V=!1;for(const _ in i.morphAttributes){if(_!=="position"&&_!=="normal"){V||(console.warn("GLTFExporter: Only POSITION and NORMAL morph are supported."),V=!0);continue}const N=i.morphAttributes[_][E],G=_.toUpperCase(),C=i.attributes[_];if(s.attributes.has(this.getUID(N,!0))){A[G]=s.attributes.get(this.getUID(N,!0));continue}const U=N.clone();if(!i.morphTargetsRelative)for(let I=0,ee=N.count;I<ee;I++)for(let S=0;S<N.itemSize;S++)S===0&&U.setX(I,N.getX(I)-C.getX(I)),S===1&&U.setY(I,N.getY(I)-C.getY(I)),S===2&&U.setZ(I,N.getZ(I)-C.getZ(I)),S===3&&U.setW(I,N.getW(I)-C.getW(I));A[G]=this.processAccessor(U,i),s.attributes.set(this.getUID(C,!0),A[G])}u.push(A),x.push(e.morphTargetInfluences[E]),e.morphTargetDictionary!==void 0&&m.push(w[E])}a.weights=x,m.length>0&&(a.extras={},a.extras.targetNames=m)}const d=Array.isArray(e.material);if(d&&i.groups.length===0)return null;let g=!1;if(d&&i.index===null){const x=[];for(let m=0,w=i.attributes.position.count;m<w;m++)x[m]=m;i.setIndex(x),g=!0}const y=d?e.material:[e.material],b=d?i.groups:[{materialIndex:0,start:void 0,count:void 0}];for(let x=0,m=b.length;x<m;x++){const w={mode:o,attributes:l};if(this.serializeUserData(i,w),u.length>0&&(w.targets=u),i.index!==null){let A=this.getUID(i.index);(b[x].start!==void 0||b[x].count!==void 0)&&(A+=":"+b[x].start+":"+b[x].count),s.attributes.has(A)?w.indices=s.attributes.get(A):(w.indices=this.processAccessor(i.index,i,b[x].start,b[x].count),s.attributes.set(A,w.indices)),w.indices===null&&delete w.indices}const E=this.processMaterial(y[b[x].materialIndex]);E!==null&&(w.material=E),h.push(w)}g===!0&&i.setIndex(null),a.primitives=h,n.meshes||(n.meshes=[]),this._invokeAll(function(x){x.writeMesh&&x.writeMesh(e,a)});const O=n.meshes.push(a)-1;return s.meshes.set(r,O),O}detectMeshQuantization(e,s){if(this.extensionsUsed[P])return;let n;switch(s.array.constructor){case Int8Array:n="byte";break;case Uint8Array:n="unsigned byte";break;case Int16Array:n="short";break;case Uint16Array:n="unsigned short";break;default:return}s.normalized&&(n+=" normalized");const t=e.split("_",1)[0];K[t]&&K[t].includes(n)&&(this.extensionsUsed[P]=!0,this.extensionsRequired[P]=!0)}processCamera(e){const s=this.json;s.cameras||(s.cameras=[]);const n=e.isOrthographicCamera,t={type:n?"orthographic":"perspective"};return n?t.orthographic={xmag:e.right*2,ymag:e.top*2,zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near}:t.perspective={aspectRatio:e.aspect,yfov:H.degToRad(e.fov),zfar:e.far<=0?.001:e.far,znear:e.near<0?0:e.near},e.name!==""&&(t.name=e.type),s.cameras.push(t)-1}processAnimation(e,s){const n=this.json,t=this.nodeMap;n.animations||(n.animations=[]),e=Q.Utils.mergeMorphTargetTracks(e.clone(),s);const r=e.tracks,i=[],o=[];for(let a=0;a<r.length;++a){const l=r[a],h=D.parseTrackName(l.name);let u=D.findNode(s,h.nodeName);const M=j[h.propertyName];if(h.objectName==="bones"&&(u.isSkinnedMesh===!0?u=u.skeleton.getBoneByName(h.objectIndex):u=void 0),!u||!M)return console.warn('THREE.GLTFExporter: Could not export animation track "%s".',l.name),null;const f=1;let p=l.values.length/l.times.length;M===j.morphTargetInfluences&&(p/=u.morphTargetInfluences.length);let d;l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline===!0?(d="CUBICSPLINE",p/=3):l.getInterpolation()===ae?d="STEP":d="LINEAR",o.push({input:this.processAccessor(new L(l.times,f)),output:this.processAccessor(new L(l.values,p)),interpolation:d}),i.push({sampler:o.length-1,target:{node:t.get(u),path:M}})}return n.animations.push({name:e.name||"clip_"+n.animations.length,samplers:o,channels:i}),n.animations.length-1}processSkin(e){const s=this.json,n=this.nodeMap,t=s.nodes[n.get(e)],r=e.skeleton;if(r===void 0)return null;const i=e.skeleton.bones[0];if(i===void 0)return null;const o=[],a=new Float32Array(r.bones.length*16),l=new Z;for(let u=0;u<r.bones.length;++u)o.push(n.get(r.bones[u])),l.copy(r.boneInverses[u]),l.multiply(e.bindMatrix).toArray(a,u*16);return s.skins===void 0&&(s.skins=[]),s.skins.push({inverseBindMatrices:this.processAccessor(new L(a,16)),joints:o,skeleton:n.get(i)}),t.skin=s.skins.length-1}processNode(e){const s=this.json,n=this.options,t=this.nodeMap;s.nodes||(s.nodes=[]);const r={};if(n.trs){const o=e.quaternion.toArray(),a=e.position.toArray(),l=e.scale.toArray();F(o,[0,0,0,1])||(r.rotation=o),F(a,[0,0,0])||(r.translation=a),F(l,[1,1,1])||(r.scale=l)}else e.matrixAutoUpdate&&e.updateMatrix(),be(e.matrix)===!1&&(r.matrix=e.matrix.elements);if(e.name!==""&&(r.name=String(e.name)),this.serializeUserData(e,r),e.isMesh||e.isLine||e.isPoints){const o=this.processMesh(e);o!==null&&(r.mesh=o)}else e.isCamera&&(r.camera=this.processCamera(e));if(e.isSkinnedMesh&&this.skins.push(e),e.children.length>0){const o=[];for(let a=0,l=e.children.length;a<l;a++){const h=e.children[a];if(h.visible||n.onlyVisible===!1){const u=this.processNode(h);u!==null&&o.push(u)}}o.length>0&&(r.children=o)}this._invokeAll(function(o){o.writeNode&&o.writeNode(e,r)});const i=s.nodes.push(r)-1;return t.set(e,i),i}processScene(e){const s=this.json,n=this.options;s.scenes||(s.scenes=[],s.scene=0);const t={};e.name!==""&&(t.name=e.name),s.scenes.push(t);const r=[];for(let i=0,o=e.children.length;i<o;i++){const a=e.children[i];if(a.visible||n.onlyVisible===!1){const l=this.processNode(a);l!==null&&r.push(l)}}r.length>0&&(t.nodes=r),this.serializeUserData(e,t)}processObjects(e){const s=new Y;s.name="AuxScene";for(let n=0;n<e.length;n++)s.children.push(e[n]);this.processScene(s)}processInput(e){const s=this.options;e=e instanceof Array?e:[e],this._invokeAll(function(t){t.beforeParse&&t.beforeParse(e)});const n=[];for(let t=0;t<e.length;t++)e[t]instanceof Y?this.processScene(e[t]):n.push(e[t]);n.length>0&&this.processObjects(n);for(let t=0;t<this.skins.length;++t)this.processSkin(this.skins[t]);for(let t=0;t<s.animations.length;++t)this.processAnimation(s.animations[t],e[0]);this._invokeAll(function(t){t.afterParse&&t.afterParse(e)})}_invokeAll(e){for(let s=0,n=this.plugins.length;s<n;s++)e(this.plugins[s])}}class Se{constructor(e){this.writer=e,this.name="KHR_lights_punctual"}writeNode(e,s){if(!e.isLight)return;if(!e.isDirectionalLight&&!e.isPointLight&&!e.isSpotLight){console.warn("THREE.GLTFExporter: Only directional, point, and spot lights are supported.",e);return}const n=this.writer,t=n.json,r=n.extensionsUsed,i={};e.name&&(i.name=e.name),i.color=e.color.toArray(),i.intensity=e.intensity,e.isDirectionalLight?i.type="directional":e.isPointLight?(i.type="point",e.distance>0&&(i.range=e.distance)):e.isSpotLight&&(i.type="spot",e.distance>0&&(i.range=e.distance),i.spot={},i.spot.innerConeAngle=(1-e.penumbra)*e.angle,i.spot.outerConeAngle=e.angle),e.decay!==void 0&&e.decay!==2&&console.warn("THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, and expects light.decay=2."),e.target&&(e.target.parent!==e||e.target.position.x!==0||e.target.position.y!==0||e.target.position.z!==-1)&&console.warn("THREE.GLTFExporter: Light direction may be lost. For best results, make light.target a child of the light with position 0,0,-1."),r[this.name]||(t.extensions=t.extensions||{},t.extensions[this.name]={lights:[]},r[this.name]=!0);const o=t.extensions[this.name].lights;o.push(i),s.extensions=s.extensions||{},s.extensions[this.name]={light:o.length-1}}}class _e{constructor(e){this.writer=e,this.name="KHR_materials_unlit"}writeMaterial(e,s){if(!e.isMeshBasicMaterial)return;const t=this.writer.extensionsUsed;s.extensions=s.extensions||{},s.extensions[this.name]={},t[this.name]=!0,s.pbrMetallicRoughness.metallicFactor=0,s.pbrMetallicRoughness.roughnessFactor=.9}}class Ce{constructor(e){this.writer=e,this.name="KHR_materials_clearcoat"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.clearcoat===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.clearcoatFactor=e.clearcoat,e.clearcoatMap){const i={index:n.processTexture(e.clearcoatMap),texCoord:e.clearcoatMap.channel};n.applyTextureTransform(i,e.clearcoatMap),r.clearcoatTexture=i}if(r.clearcoatRoughnessFactor=e.clearcoatRoughness,e.clearcoatRoughnessMap){const i={index:n.processTexture(e.clearcoatRoughnessMap),texCoord:e.clearcoatRoughnessMap.channel};n.applyTextureTransform(i,e.clearcoatRoughnessMap),r.clearcoatRoughnessTexture=i}if(e.clearcoatNormalMap){const i={index:n.processTexture(e.clearcoatNormalMap),texCoord:e.clearcoatNormalMap.channel};e.clearcoatNormalScale.x!==1&&(i.scale=e.clearcoatNormalScale.x),n.applyTextureTransform(i,e.clearcoatNormalMap),r.clearcoatNormalTexture=i}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Ue{constructor(e){this.writer=e,this.name="KHR_materials_dispersion"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.dispersion===0)return;const t=this.writer.extensionsUsed,r={};r.dispersion=e.dispersion,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Fe{constructor(e){this.writer=e,this.name="KHR_materials_iridescence"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.iridescence===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.iridescenceFactor=e.iridescence,e.iridescenceMap){const i={index:n.processTexture(e.iridescenceMap),texCoord:e.iridescenceMap.channel};n.applyTextureTransform(i,e.iridescenceMap),r.iridescenceTexture=i}if(r.iridescenceIor=e.iridescenceIOR,r.iridescenceThicknessMinimum=e.iridescenceThicknessRange[0],r.iridescenceThicknessMaximum=e.iridescenceThicknessRange[1],e.iridescenceThicknessMap){const i={index:n.processTexture(e.iridescenceThicknessMap),texCoord:e.iridescenceThicknessMap.channel};n.applyTextureTransform(i,e.iridescenceThicknessMap),r.iridescenceThicknessTexture=i}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Oe{constructor(e){this.writer=e,this.name="KHR_materials_transmission"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.transmissionFactor=e.transmission,e.transmissionMap){const i={index:n.processTexture(e.transmissionMap),texCoord:e.transmissionMap.channel};n.applyTextureTransform(i,e.transmissionMap),r.transmissionTexture=i}s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class ve{constructor(e){this.writer=e,this.name="KHR_materials_volume"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.transmission===0)return;const n=this.writer,t=n.extensionsUsed,r={};if(r.thicknessFactor=e.thickness,e.thicknessMap){const i={index:n.processTexture(e.thicknessMap),texCoord:e.thicknessMap.channel};n.applyTextureTransform(i,e.thicknessMap),r.thicknessTexture=i}r.attenuationDistance=e.attenuationDistance,r.attenuationColor=e.attenuationColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class De{constructor(e){this.writer=e,this.name="KHR_materials_ior"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.ior===1.5)return;const t=this.writer.extensionsUsed,r={};r.ior=e.ior,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Ge{constructor(e){this.writer=e,this.name="KHR_materials_specular"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.specularIntensity===1&&e.specularColor.equals(ye)&&!e.specularIntensityMap&&!e.specularColorMap)return;const n=this.writer,t=n.extensionsUsed,r={};if(e.specularIntensityMap){const i={index:n.processTexture(e.specularIntensityMap),texCoord:e.specularIntensityMap.channel};n.applyTextureTransform(i,e.specularIntensityMap),r.specularTexture=i}if(e.specularColorMap){const i={index:n.processTexture(e.specularColorMap),texCoord:e.specularColorMap.channel};n.applyTextureTransform(i,e.specularColorMap),r.specularColorTexture=i}r.specularFactor=e.specularIntensity,r.specularColorFactor=e.specularColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Be{constructor(e){this.writer=e,this.name="KHR_materials_sheen"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.sheen==0)return;const n=this.writer,t=n.extensionsUsed,r={};if(e.sheenRoughnessMap){const i={index:n.processTexture(e.sheenRoughnessMap),texCoord:e.sheenRoughnessMap.channel};n.applyTextureTransform(i,e.sheenRoughnessMap),r.sheenRoughnessTexture=i}if(e.sheenColorMap){const i={index:n.processTexture(e.sheenColorMap),texCoord:e.sheenColorMap.channel};n.applyTextureTransform(i,e.sheenColorMap),r.sheenColorTexture=i}r.sheenRoughnessFactor=e.sheenRoughness,r.sheenColorFactor=e.sheenColor.toArray(),s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class ze{constructor(e){this.writer=e,this.name="KHR_materials_anisotropy"}writeMaterial(e,s){if(!e.isMeshPhysicalMaterial||e.anisotropy==0)return;const n=this.writer,t=n.extensionsUsed,r={};if(e.anisotropyMap){const i={index:n.processTexture(e.anisotropyMap)};n.applyTextureTransform(i,e.anisotropyMap),r.anisotropyTexture=i}r.anisotropyStrength=e.anisotropy,r.anisotropyRotation=e.anisotropyRotation,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class Pe{constructor(e){this.writer=e,this.name="KHR_materials_emissive_strength"}writeMaterial(e,s){if(!e.isMeshStandardMaterial||e.emissiveIntensity===1)return;const t=this.writer.extensionsUsed,r={};r.emissiveStrength=e.emissiveIntensity,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class ke{constructor(e){this.writer=e,this.name="EXT_materials_bump"}writeMaterial(e,s){if(!e.isMeshStandardMaterial||e.bumpScale===1&&!e.bumpMap)return;const n=this.writer,t=n.extensionsUsed,r={};if(e.bumpMap){const i={index:n.processTexture(e.bumpMap),texCoord:e.bumpMap.channel};n.applyTextureTransform(i,e.bumpMap),r.bumpTexture=i}r.bumpFactor=e.bumpScale,s.extensions=s.extensions||{},s.extensions[this.name]=r,t[this.name]=!0}}class He{constructor(e){this.writer=e,this.name="EXT_mesh_gpu_instancing"}writeNode(e,s){if(!e.isInstancedMesh)return;const n=this.writer,t=e,r=new Float32Array(t.count*3),i=new Float32Array(t.count*4),o=new Float32Array(t.count*3),a=new Z,l=new v,h=new me,u=new v;for(let f=0;f<t.count;f++)t.getMatrixAt(f,a),a.decompose(l,h,u),l.toArray(r,f*3),h.toArray(i,f*4),u.toArray(o,f*3);const M={TRANSLATION:n.processAccessor(new L(r,3)),ROTATION:n.processAccessor(new L(i,4)),SCALE:n.processAccessor(new L(o,3))};t.instanceColor&&(M._COLOR_0=n.processAccessor(t.instanceColor)),s.extensions=s.extensions||{},s.extensions[this.name]={attributes:M},n.extensionsUsed[this.name]=!0,n.extensionsRequired[this.name]=!0}}Q.Utils={insertKeyframe:function(c,e){const n=c.getValueSize(),t=new c.TimeBufferType(c.times.length+1),r=new c.ValueBufferType(c.values.length+n),i=c.createInterpolant(new c.ValueBufferType(n));let o;if(c.times.length===0){t[0]=e;for(let a=0;a<n;a++)r[a]=0;o=0}else if(e<c.times[0]){if(Math.abs(c.times[0]-e)<.001)return 0;t[0]=e,t.set(c.times,1),r.set(i.evaluate(e),0),r.set(c.values,n),o=0}else if(e>c.times[c.times.length-1]){if(Math.abs(c.times[c.times.length-1]-e)<.001)return c.times.length-1;t[t.length-1]=e,t.set(c.times,0),r.set(c.values,0),r.set(i.evaluate(e),c.values.length),o=t.length-1}else for(let a=0;a<c.times.length;a++){if(Math.abs(c.times[a]-e)<.001)return a;if(c.times[a]<e&&c.times[a+1]>e){t.set(c.times.slice(0,a+1),0),t[a+1]=e,t.set(c.times.slice(a+1),a+2),r.set(c.values.slice(0,(a+1)*n),0),r.set(i.evaluate(e),(a+1)*n),r.set(c.values.slice((a+1)*n),(a+2)*n),o=a+1;break}}return c.times=t,c.values=r,o},mergeMorphTargetTracks:function(c,e){const s=[],n={},t=c.tracks;for(let r=0;r<t.length;++r){let i=t[r];const o=D.parseTrackName(i.name),a=D.findNode(e,o.nodeName);if(o.propertyName!=="morphTargetInfluences"||o.propertyIndex===void 0){s.push(i);continue}if(i.createInterpolant!==i.InterpolantFactoryMethodDiscrete&&i.createInterpolant!==i.InterpolantFactoryMethodLinear){if(i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline)throw new Error("THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.");console.warn("THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead."),i=i.clone(),i.setInterpolation(ce)}const l=a.morphTargetInfluences.length,h=a.morphTargetDictionary[o.propertyIndex];if(h===void 0)throw new Error("THREE.GLTFExporter: Morph target name not found: "+o.propertyIndex);let u;if(n[a.uuid]===void 0){u=i.clone();const f=new u.ValueBufferType(l*u.times.length);for(let p=0;p<u.times.length;p++)f[p*l+h]=u.values[p];u.name=(o.nodeName||"")+".morphTargetInfluences",u.values=f,n[a.uuid]=u,s.push(u);continue}const M=i.createInterpolant(new i.ValueBufferType(1));u=n[a.uuid];for(let f=0;f<u.times.length;f++)u.values[f*l+h]=M.evaluate(u.times[f]);for(let f=0;f<i.times.length;f++){const p=this.insertKeyframe(u,i.times[f]);u.values[p*l+h]=i.values[f]}}return c.tracks=s,c}};export{Q as GLTFExporter};
