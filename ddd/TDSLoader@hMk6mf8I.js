import{ac as M,aj as f,ad as A,G as p,g as u,D as m,A as x,B as b,M as C,ao as c,j as g,am as T,b as _}from"./ddd@DwDq534T.js";class ce extends M{constructor(t){super(t),this.debug=!1,this.group=null,this.materials=[],this.meshes=[]}load(t,s,e,a){const r=this,n=this.path===""?f.extractUrlBase(t):this.path,i=new A(this.manager);i.setPath(this.path),i.setResponseType("arraybuffer"),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(t,function(o){try{s(r.parse(o,n))}catch(d){a?a(d):console.error(d),r.manager.itemError(t)}},e,a)}parse(t,s){this.group=new p,this.materials=[],this.meshes=[],this.readFile(t,s);for(let e=0;e<this.meshes.length;e++)this.group.add(this.meshes[e]);return this.group}readFile(t,s){const e=new DataView(t),a=new h(e,0,this.debugMessage);if(a.id===E||a.id===w||a.id===F){let r=a.readChunk();for(;r;){if(r.id===I){const n=r.readDWord();this.debugMessage("3DS file version: "+n)}else r.id===P?this.readMeshData(r,s):this.debugMessage("Unknown main chunk: "+r.hexId);r=a.readChunk()}}this.debugMessage("Parsed "+this.meshes.length+" meshes")}readMeshData(t,s){let e=t.readChunk();for(;e;){if(e.id===N){const a=+e.readDWord();this.debugMessage("Mesh Version: "+a)}else if(e.id===B){const a=e.readFloat();this.debugMessage("Master scale: "+a),this.group.scale.set(a,a,a)}else e.id===ae?(this.debugMessage("Named Object"),this.readNamedObject(e)):e.id===U?(this.debugMessage("Material"),this.readMaterialEntry(e,s)):this.debugMessage("Unknown MDATA chunk: "+e.hexId);e=t.readChunk()}}readNamedObject(t){const s=t.readString();let e=t.readChunk();for(;e;){if(e.id===ie){const a=this.readMesh(e);a.name=s,this.meshes.push(a)}else this.debugMessage("Unknown named object chunk: "+e.hexId);e=t.readChunk()}}readMaterialEntry(t,s){let e=t.readChunk();const a=new u;for(;e;){if(e.id===W)a.name=e.readString(),this.debugMessage("   Name: "+a.name);else if(e.id===X)this.debugMessage("   Wireframe"),a.wireframe=!0;else if(e.id===z){const r=e.readByte();a.wireframeLinewidth=r,this.debugMessage("   Wireframe Thickness: "+r)}else if(e.id===H)a.side=m,this.debugMessage("   DoubleSided");else if(e.id===Y)this.debugMessage("   Additive Blending"),a.blending=x;else if(e.id===v)this.debugMessage("   Diffuse Color"),a.color=this.readColor(e);else if(e.id===G)this.debugMessage("   Specular Color"),a.specular=this.readColor(e);else if(e.id===L)this.debugMessage("   Ambient color"),a.color=this.readColor(e);else if(e.id===V){const r=this.readPercentage(e);a.shininess=r*100,this.debugMessage("   Shininess : "+r)}else if(e.id===j){const r=this.readPercentage(e);a.opacity=1-r,this.debugMessage("  Transparency : "+r),a.transparent=a.opacity<1}else e.id===q?(this.debugMessage("   ColorMap"),a.map=this.readMap(e,s)):e.id===Z?(this.debugMessage("   BumpMap"),a.bumpMap=this.readMap(e,s)):e.id===J?(this.debugMessage("   OpacityMap"),a.alphaMap=this.readMap(e,s)):e.id===K?(this.debugMessage("   SpecularMap"),a.specularMap=this.readMap(e,s)):this.debugMessage("   Unknown material chunk: "+e.hexId);e=t.readChunk()}this.materials[a.name]=a}readMesh(t){let s=t.readChunk();const e=new b,a=new u,r=new C(e,a);for(r.name="mesh";s;){if(s.id===re){const n=s.readWord();this.debugMessage("   Vertex: "+n);const i=[];for(let o=0;o<n;o++)i.push(s.readFloat()),i.push(s.readFloat()),i.push(s.readFloat());e.setAttribute("position",new c(i,3))}else if(s.id===ne)this.readFaceArray(s,r);else if(s.id===de){const n=s.readWord();this.debugMessage("   UV: "+n);const i=[];for(let o=0;o<n;o++)i.push(s.readFloat()),i.push(s.readFloat());e.setAttribute("uv",new c(i,2))}else if(s.id===he){this.debugMessage("   Tranformation Matrix (TODO)");const n=[];for(let d=0;d<12;d++)n[d]=s.readFloat();const i=new g;i.elements[0]=n[0],i.elements[1]=n[6],i.elements[2]=n[3],i.elements[3]=n[9],i.elements[4]=n[2],i.elements[5]=n[8],i.elements[6]=n[5],i.elements[7]=n[11],i.elements[8]=n[1],i.elements[9]=n[7],i.elements[10]=n[4],i.elements[11]=n[10],i.elements[12]=0,i.elements[13]=0,i.elements[14]=0,i.elements[15]=1,i.transpose();const o=new g;o.copy(i).invert(),e.applyMatrix4(o),i.decompose(r.position,r.quaternion,r.scale)}else this.debugMessage("   Unknown mesh chunk: "+s.hexId);s=t.readChunk()}return e.computeVertexNormals(),r}readFaceArray(t,s){const e=t.readWord();this.debugMessage("   Faces: "+e);const a=[];for(let i=0;i<e;++i)a.push(t.readWord(),t.readWord(),t.readWord()),t.readWord();s.geometry.setIndex(a);let r=0,n=0;for(;!t.endOfChunk;){const i=t.readChunk();if(i.id===oe){this.debugMessage("      Material Group");const o=this.readMaterialGroup(i),d=o.index.length*3;s.geometry.addGroup(n,d,r),n+=d,r++;const l=this.materials[o.name];Array.isArray(s.material)===!1&&(s.material=[]),l!==void 0&&s.material.push(l)}else this.debugMessage("      Unknown face array chunk: "+i.hexId)}s.material.length===1&&(s.material=s.material[0])}readMap(t,s){let e=t.readChunk(),a={};const r=new T(this.manager);for(r.setPath(this.resourcePath||s).setCrossOrigin(this.crossOrigin);e;){if(e.id===Q){const n=e.readString();a=r.load(n),this.debugMessage("      File: "+s+n)}else e.id===se?(a.offset.x=e.readFloat(),this.debugMessage("      OffsetX: "+a.offset.x)):e.id===te?(a.offset.y=e.readFloat(),this.debugMessage("      OffsetY: "+a.offset.y)):e.id===$?(a.repeat.x=e.readFloat(),this.debugMessage("      RepeatX: "+a.repeat.x)):e.id===ee?(a.repeat.y=e.readFloat(),this.debugMessage("      RepeatY: "+a.repeat.y)):this.debugMessage("      Unknown map chunk: "+e.hexId);e=t.readChunk()}return a}readMaterialGroup(t){const s=t.readString(),e=t.readWord();this.debugMessage("         Name: "+s),this.debugMessage("         Faces: "+e);const a=[];for(let r=0;r<e;++r)a.push(t.readWord());return{name:s,index:a}}readColor(t){const s=t.readChunk(),e=new _;if(s.id===y||s.id===O){const a=s.readByte(),r=s.readByte(),n=s.readByte();e.setRGB(a/255,r/255,n/255),this.debugMessage("      Color: "+e.r+", "+e.g+", "+e.b)}else if(s.id===S||s.id===k){const a=s.readFloat(),r=s.readFloat(),n=s.readFloat();e.setRGB(a,r,n),this.debugMessage("      Color: "+e.r+", "+e.g+", "+e.b)}else this.debugMessage("      Unknown color chunk: "+s.hexId);return e}readPercentage(t){const s=t.readChunk();switch(s.id){case D:return s.readShort()/100;case R:return s.readFloat();default:return this.debugMessage("      Unknown percentage chunk: "+s.hexId),0}}debugMessage(t){this.debug&&console.log(t)}}class h{constructor(t,s,e){this.data=t,this.offset=s,this.position=s,this.debugMessage=e,this.debugMessage instanceof Function&&(this.debugMessage=function(){}),this.id=this.readWord(),this.size=this.readDWord(),this.end=this.offset+this.size,this.end>t.byteLength&&this.debugMessage("Bad chunk size for chunk at "+s)}readChunk(){if(this.endOfChunk)return null;try{const t=new h(this.data,this.position,this.debugMessage);return this.position+=t.size,t}catch{return this.debugMessage("Unable to read chunk at "+this.position),null}}get hexId(){return this.id.toString(16)}get endOfChunk(){return this.position>=this.end}readByte(){const t=this.data.getUint8(this.position,!0);return this.position+=1,t}readFloat(){try{const t=this.data.getFloat32(this.position,!0);return this.position+=4,t}catch(t){return this.debugMessage(t+" "+this.position+" "+this.data.byteLength),0}}readInt(){const t=this.data.getInt32(this.position,!0);return this.position+=4,t}readShort(){const t=this.data.getInt16(this.position,!0);return this.position+=2,t}readDWord(){const t=this.data.getUint32(this.position,!0);return this.position+=4,t}readWord(){const t=this.data.getUint16(this.position,!0);return this.position+=2,t}readString(){let t="",s=this.readByte();for(;s;)t+=String.fromCharCode(s),s=this.readByte();return t}}const F=19789,E=15786,w=49725,I=2,S=16,y=17,O=18,k=19,D=48,R=49,P=15677,N=15678,B=256,U=45055,W=40960,L=40976,v=40992,G=41008,V=41024,j=41040,H=41089,Y=41091,X=41093,z=41095,q=41472,J=41488,Z=41520,K=41476,Q=41728,$=41812,ee=41814,se=41816,te=41818,ae=16384,ie=16640,re=16656,ne=16672,oe=16688,de=16704,he=16736;export{ce as TDSLoader};
