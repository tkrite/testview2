import{aw as w,aH as P,aI as b,aJ as R,aK as V}from"./ddd@DwDq534T.js";class L extends w{constructor(t){super(t)}parse(t,n){const i=new Uint32Array(t,0,13),m={buffer:t,header:i,loadMipmaps:n};if(i[0]===55727696)return k(m);if(i[11]===559044176)return C(m);console.error("THREE.PVRLoader: Unknown PVR format.")}}function k(e){const t=e.header;let n,o;const i=t[12],m=t[2],s=t[6],c=t[7],r=t[10],u=t[11];switch(m){case 0:n=2,o=V;break;case 1:n=2,o=R;break;case 2:n=4,o=b;break;case 3:n=4,o=P;break;default:console.error("THREE.PVRLoader: Unsupported PVR format:",m)}return e.dataPtr=52+i,e.bpp=n,e.format=o,e.width=c,e.height=s,e.numSurfaces=r,e.numMipmaps=u,e.isCubemap=r===6,_(e)}function C(e){const t=e.header,n=t[0],o=t[1],i=t[2],m=t[3],s=t[4],c=t[10],r=t[12],u=255,l=24,p=25,h=s&u;let a,f;const d=c>0;return h===p?(f=d?P:b,a=4):h===l?(f=d?R:V,a=2):console.error("THREE.PVRLoader: Unknown PVR format:",h),e.dataPtr=n,e.bpp=a,e.format=f,e.width=i,e.height=o,e.numSurfaces=r,e.numMipmaps=m+1,e.isCubemap=r===6,_(e)}function _(e){const t={mipmaps:[],width:e.width,height:e.height,format:e.format,mipmapCount:e.numMipmaps,isCubemap:e.isCubemap},n=e.buffer;let o=e.dataPtr,i=0,m=0,s=0,c=0,r=0,u=0;const l=e.bpp,p=e.numSurfaces;l===2?(s=8,c=4):(s=4,c=4),m=s*c*l/8,t.mipmaps.length=e.numMipmaps*p;let h=0;for(;h<e.numMipmaps;){const a=e.width>>h,f=e.height>>h;r=a/s,u=f/c,r<2&&(r=2),u<2&&(u=2),i=r*u*m;for(let d=0;d<p;d++){const g={data:new Uint8Array(n,o,i),width:a,height:f};t.mipmaps[d*e.numMipmaps+h]=g,o+=i}h++}return t}export{L as PVRLoader};
