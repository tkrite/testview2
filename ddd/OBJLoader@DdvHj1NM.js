import{V,b as N,ac as R,ad as T,G as H,B as P,ao as w,ap as z,aq as U,ar as L,a as k,as as D,at as A,M as B}from"./ddd@DwDq534T.js";const q=/^[og]\s*(.+)?/,J=/^mtllib /,W=/^usemtl /,K=/^usemap /,G=/\s+/,E=new V,C=new V,O=new V,S=new V,y=new V,_=new N;function Q(){const M={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(s,e){if(this.object&&this.object.fromDeclaration===!1){this.object.name=s,this.object.fromDeclaration=e!==!1;return}const n=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:s||"",fromDeclaration:e!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(t,i){const a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);const c={index:this.materials.length,name:t||"",mtllib:Array.isArray(i)&&i.length>0?i[i.length-1]:"",smooth:a!==void 0?a.smooth:this.smooth,groupStart:a!==void 0?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(g){const r={index:typeof g=="number"?g:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return r.clone=this.clone.bind(r),r}};return this.materials.push(c),c},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(t){const i=this.currentMaterial();if(i&&i.groupEnd===-1&&(i.groupEnd=this.geometry.vertices.length/3,i.groupCount=i.groupEnd-i.groupStart,i.inherited=!1),t&&this.materials.length>1)for(let a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return t&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),i}},n&&n.name&&typeof n.clone=="function"){const t=n.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(s,e){const n=parseInt(s,10);return(n>=0?n-1:n+e/3)*3},parseNormalIndex:function(s,e){const n=parseInt(s,10);return(n>=0?n-1:n+e/3)*3},parseUVIndex:function(s,e){const n=parseInt(s,10);return(n>=0?n-1:n+e/2)*2},addVertex:function(s,e,n){const t=this.vertices,i=this.object.geometry.vertices;i.push(t[s+0],t[s+1],t[s+2]),i.push(t[e+0],t[e+1],t[e+2]),i.push(t[n+0],t[n+1],t[n+2])},addVertexPoint:function(s){const e=this.vertices;this.object.geometry.vertices.push(e[s+0],e[s+1],e[s+2])},addVertexLine:function(s){const e=this.vertices;this.object.geometry.vertices.push(e[s+0],e[s+1],e[s+2])},addNormal:function(s,e,n){const t=this.normals,i=this.object.geometry.normals;i.push(t[s+0],t[s+1],t[s+2]),i.push(t[e+0],t[e+1],t[e+2]),i.push(t[n+0],t[n+1],t[n+2])},addFaceNormal:function(s,e,n){const t=this.vertices,i=this.object.geometry.normals;E.fromArray(t,s),C.fromArray(t,e),O.fromArray(t,n),y.subVectors(O,C),S.subVectors(E,C),y.cross(S),y.normalize(),i.push(y.x,y.y,y.z),i.push(y.x,y.y,y.z),i.push(y.x,y.y,y.z)},addColor:function(s,e,n){const t=this.colors,i=this.object.geometry.colors;t[s]!==void 0&&i.push(t[s+0],t[s+1],t[s+2]),t[e]!==void 0&&i.push(t[e+0],t[e+1],t[e+2]),t[n]!==void 0&&i.push(t[n+0],t[n+1],t[n+2])},addUV:function(s,e,n){const t=this.uvs,i=this.object.geometry.uvs;i.push(t[s+0],t[s+1]),i.push(t[e+0],t[e+1]),i.push(t[n+0],t[n+1])},addDefaultUV:function(){const s=this.object.geometry.uvs;s.push(0,0),s.push(0,0),s.push(0,0)},addUVLine:function(s){const e=this.uvs;this.object.geometry.uvs.push(e[s+0],e[s+1])},addFace:function(s,e,n,t,i,a,c,g,r){const u=this.vertices.length;let o=this.parseVertexIndex(s,u),l=this.parseVertexIndex(e,u),f=this.parseVertexIndex(n,u);if(this.addVertex(o,l,f),this.addColor(o,l,f),c!==void 0&&c!==""){const m=this.normals.length;o=this.parseNormalIndex(c,m),l=this.parseNormalIndex(g,m),f=this.parseNormalIndex(r,m),this.addNormal(o,l,f)}else this.addFaceNormal(o,l,f);if(t!==void 0&&t!==""){const m=this.uvs.length;o=this.parseUVIndex(t,m),l=this.parseUVIndex(i,m),f=this.parseUVIndex(a,m),this.addUV(o,l,f),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(s){this.object.geometry.type="Points";const e=this.vertices.length;for(let n=0,t=s.length;n<t;n++){const i=this.parseVertexIndex(s[n],e);this.addVertexPoint(i),this.addColor(i)}},addLineGeometry:function(s,e){this.object.geometry.type="Line";const n=this.vertices.length,t=this.uvs.length;for(let i=0,a=s.length;i<a;i++)this.addVertexLine(this.parseVertexIndex(s[i],n));for(let i=0,a=e.length;i<a;i++)this.addUVLine(this.parseUVIndex(e[i],t))}};return M.startObject("",!1),M}class Y extends R{constructor(s){super(s),this.materials=null}load(s,e,n,t){const i=this,a=new T(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(s,function(c){try{c instanceof Uint8Array&&(c=new TextDecoder().decode(c)),e(i.parse(c))}catch(g){t?t(g):console.error(g),i.manager.itemError(s)}},n,t)}setMaterials(s){return this.materials=s,this}parse(s){const e=new Q;s.indexOf(`\r
`)!==-1&&(s=s.replace(/\r\n/g,`
`)),s.indexOf(`\\
`)!==-1&&(s=s.replace(/\\\n/g,""));const n=s.split(`
`);let t=[];for(let c=0,g=n.length;c<g;c++){const r=n[c].trimStart();if(r.length===0)continue;const u=r.charAt(0);if(u!=="#")if(u==="v"){const o=r.split(G);switch(o[0]){case"v":e.vertices.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3])),o.length>=7?(_.setRGB(parseFloat(o[4]),parseFloat(o[5]),parseFloat(o[6])).convertSRGBToLinear(),e.colors.push(_.r,_.g,_.b)):e.colors.push(void 0,void 0,void 0);break;case"vn":e.normals.push(parseFloat(o[1]),parseFloat(o[2]),parseFloat(o[3]));break;case"vt":e.uvs.push(parseFloat(o[1]),parseFloat(o[2]));break}}else if(u==="f"){const l=r.slice(1).trim().split(G),f=[];for(let h=0,p=l.length;h<p;h++){const b=l[h];if(b.length>0){const v=b.split("/");f.push(v)}}const m=f[0];for(let h=1,p=f.length-1;h<p;h++){const b=f[h],v=f[h+1];e.addFace(m[0],b[0],v[0],m[1],b[1],v[1],m[2],b[2],v[2])}}else if(u==="l"){const o=r.substring(1).trim().split(" ");let l=[];const f=[];if(r.indexOf("/")===-1)l=o;else for(let m=0,h=o.length;m<h;m++){const p=o[m].split("/");p[0]!==""&&l.push(p[0]),p[1]!==""&&f.push(p[1])}e.addLineGeometry(l,f)}else if(u==="p"){const l=r.slice(1).trim().split(" ");e.addPointGeometry(l)}else if((t=q.exec(r))!==null){const o=(" "+t[0].slice(1).trim()).slice(1);e.startObject(o)}else if(W.test(r))e.object.startMaterial(r.substring(7).trim(),e.materialLibraries);else if(J.test(r))e.materialLibraries.push(r.substring(7).trim());else if(K.test(r))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(u==="s"){if(t=r.split(" "),t.length>1){const l=t[1].trim().toLowerCase();e.object.smooth=l!=="0"&&l!=="off"}else e.object.smooth=!0;const o=e.object.currentMaterial();o&&(o.smooth=e.object.smooth)}else{if(r==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+r+'"')}}e.finalize();const i=new H;if(i.materialLibraries=[].concat(e.materialLibraries),!(e.objects.length===1&&e.objects[0].geometry.vertices.length===0)===!0)for(let c=0,g=e.objects.length;c<g;c++){const r=e.objects[c],u=r.geometry,o=r.materials,l=u.type==="Line",f=u.type==="Points";let m=!1;if(u.vertices.length===0)continue;const h=new P;h.setAttribute("position",new w(u.vertices,3)),u.normals.length>0&&h.setAttribute("normal",new w(u.normals,3)),u.colors.length>0&&(m=!0,h.setAttribute("color",new w(u.colors,3))),u.hasUVIndices===!0&&h.setAttribute("uv",new w(u.uvs,2));const p=[];for(let v=0,I=o.length;v<I;v++){const j=o[v],F=j.name+"_"+j.smooth+"_"+m;let d=e.materials[F];if(this.materials!==null){if(d=this.materials.create(j.name),l&&d&&!(d instanceof z)){const x=new z;U.prototype.copy.call(x,d),x.color.copy(d.color),d=x}else if(f&&d&&!(d instanceof L)){const x=new L({size:10,sizeAttenuation:!1});U.prototype.copy.call(x,d),x.color.copy(d.color),x.map=d.map,d=x}}d===void 0&&(l?d=new z:f?d=new L({size:1,sizeAttenuation:!1}):d=new k,d.name=j.name,d.flatShading=!j.smooth,d.vertexColors=m,e.materials[F]=d),p.push(d)}let b;if(p.length>1){for(let v=0,I=o.length;v<I;v++){const j=o[v];h.addGroup(j.groupStart,j.groupCount,v)}l?b=new D(h,p):f?b=new A(h,p):b=new B(h,p)}else l?b=new D(h,p[0]):f?b=new A(h,p[0]):b=new B(h,p[0]);b.name=r.name,i.add(b)}else if(e.vertices.length>0){const c=new L({size:1,sizeAttenuation:!1}),g=new P;g.setAttribute("position",new w(e.vertices,3)),e.colors.length>0&&e.colors[0]!==void 0&&(g.setAttribute("color",new w(e.colors,3)),c.vertexColors=!0);const r=new A(g,c);i.add(r)}return i}}export{Y as OBJLoader};
